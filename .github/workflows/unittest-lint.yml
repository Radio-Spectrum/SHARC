name: Python application

on:
  push:
    branches:
      - master
      - development
      - 'v1.*'
  pull_request:
    branches:
      - master
      - development
      - 'v1.*'
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read

jobs:
  pre_job:
    runs-on: ubuntu-20.04
    outputs:
      should_not_skip: ${{ steps.changes.outputs.filesChanged }}
      files_changed: ${{ steps.changes.outputs.filesChanged_files }}
      steps:
        # Need to get git on push event
        - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0
          if: github.event_name == 'push'
        - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # pin@v2.11.1
          id: changes
          with:
            filters: |
              filesChanged:
              - added|modified: ["**/*.py"]
            list-files: 'shell'
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.12
          uses: actions/setup-python@v3
          with:
          python-version: "3.12"
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Lint with flake8
          run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82,W191,W291,W292,W293,W391,E131,E2,E3,E266 --ignore=E266 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Test with unittest
          run: |
            python -m unittest discover -s tests